<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jk.tian</title>
    <description></description>
    <link>http://localhost:4001/</link>
    <atom:link href="http://localhost:4001/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 05 May 2019 08:16:46 +0800</pubDate>
    <lastBuildDate>Sun, 05 May 2019 08:16:46 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>概率与统计</title>
        <description>
</description>
        <pubDate>Fri, 03 May 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/05/03/statics/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/05/03/statics/</guid>
        
        <category>math</category>
        
        
        <category>缘因洞--计算机理论</category>
        
      </item>
    
      <item>
        <title>DFS</title>
        <description>
&lt;blockquote&gt;
  dfs: 定义好最优子结构
dp: 要定义好递推公式
做好充分的测试用例, 不然就是在碰运气. 尝试性修改
&lt;/blockquote&gt;

</description>
        <pubDate>Thu, 02 May 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/05/02/dfs/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/05/02/dfs/</guid>
        
        <category>oj</category>
        
        
        <category>缘因洞--计算机理论</category>
        
      </item>
    
      <item>
        <title>Project Manage</title>
        <description>&lt;h2 id=&quot;软件项目管理&quot;&gt;软件项目管理&lt;/h2&gt;

项目: 在一定约束条件下具有特定目标的一次性任务, 不同于运作(每日如此)

&lt;h1 id=&quot;需求&quot;&gt;需求&lt;/h1&gt;
功能性需求
非功能性需求: 性能
</description>
        <pubDate>Tue, 23 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/04/23/project-manage/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/04/23/project-manage/</guid>
        
        
      </item>
    
      <item>
        <title>B树和B+树</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#几种树&quot; id=&quot;markdown-toc-几种树&quot;&gt;几种树&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;几种树&quot;&gt;几种树&lt;/h1&gt;
二叉搜索树(基础) ==&amp;gt; AVL(需要左右旋以保持平衡) ==&amp;gt; B/B+(多叉树,自平衡) ==&amp;gt; 红黑树(平衡)

&lt;strong&gt;B 树&lt;/strong&gt;可以看作是对2-3查找树的一种扩展，即他允许每个节点有M-1个子节点。
阶数表示了一个结点最多有多少个孩子结点，一般用字母m表示阶数
http://www.cnblogs.com/nullzx/p/8729425.html
一颗m阶的B树定义如下：

1）每个结点最多有m-1个关键字。

2）根结点最少可以只有1个关键字。

3）非根结点至少有Math.ceil(m/2)-1个关键字。

4）每个结点中的关键字都按照从小到大的顺序排列，每个关键字的左子树中的所有关键字都小于它，而右子树中的所有关键字都大于它。

5）所有叶子结点都位于同一层，或者说根结点到每个叶子结点的长度都相同。
在实际应用中的B树的阶数m都非常大（通常大于100），所以即使存储大量的数据，B树的高度仍然比较小

&lt;strong&gt;B+&lt;/strong&gt;树是对B树的一种变形树，它与B树的差异在于：

&lt;ul&gt;
  &lt;li&gt;有k个子结点的结点必然有k个关键码；&lt;/li&gt;
  &lt;li&gt;非叶结点仅具有索引作用，跟记录有关的信息均存放在叶结点中。&lt;/li&gt;
  &lt;li&gt;树的所有叶结点构成一个有序链表，可以按照关键码排序的次序遍历全部记录。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 19 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/04/19/btree/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/04/19/btree/</guid>
        
        
        <category>缘因洞--计算机理论</category>
        
      </item>
    
      <item>
        <title>操作系统复习</title>
        <description>
DMA：CPU和外存之间的数据传输方式，还有程序传送方式／中断传送方式

</description>
        <pubDate>Fri, 19 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/04/19/os/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/04/19/os/</guid>
        
        
        <category>缘因洞--计算机理论</category>
        
      </item>
    
      <item>
        <title>红黑树</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#概念&quot; id=&quot;markdown-toc-概念&quot;&gt;概念&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;概念&quot;&gt;概念&lt;/h1&gt;
红黑树不仅是二叉搜索树，且必须满足以下5条平衡规则：

1）每个结点或是红色，或是是黑色。
2）根结点是黑的。
3）所有的叶结点(NULL)是黑色的。（NULL被视为一个哨兵结点，所有应该指向NULL的指针，都看成指向了NULL结点。）
4）如果一个结点是红色的，则它的两个儿子节点都是黑色的。
5）对每个结点，从该结点到其子孙结点的所有路径上包含相同数目的黑结点。

简单的记法就是：红黑 黑 黑 红黑黑 黑

</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/04/15/rbtree/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/04/15/rbtree/</guid>
        
        
        <category>缘因洞--计算机理论</category>
        
      </item>
    
      <item>
        <title>Java</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#一门编程语言的要点&quot; id=&quot;markdown-toc-一门编程语言的要点&quot;&gt;一门编程语言的要点&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#static&quot; id=&quot;markdown-toc-static&quot;&gt;static&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;一门编程语言的要点&quot;&gt;一门编程语言的要点&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;关键字／标识符&lt;/li&gt;
  &lt;li&gt;运算符：算数，关系，逻辑&lt;/li&gt;
  &lt;li&gt;流程控制语句：判断／循环&lt;/li&gt;
  &lt;li&gt;函数&lt;/li&gt;
  &lt;li&gt;类／对象&lt;/li&gt;
  &lt;li&gt;面向对象的思想&lt;/li&gt;
  &lt;li&gt;多线程编程&lt;/li&gt;
  &lt;li&gt;网络Socket编程&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;static&quot;&gt;static&lt;/h1&gt;

修饰函数的局部变量：在函数的栈退出之后，静态变量的值仍然保存

类的静态变量：在类被加载时，进行初始化；与对象无关

类的静态函数：属于类，而不是对象，无this指针.

类的静态代码块：static {} 在类加载时，执行，只执行了一次，即使创建了多个对象

类的非静态代码块：{} 在类的静态代码块之后，在构造函数之前进行执行．
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/04/15/java/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/04/15/java/</guid>
        
        <category>Java</category>
        
        
        <category>攀天索--工具</category>
        
      </item>
    
      <item>
        <title>微信小程序开发</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#环境搭建&quot; id=&quot;markdown-toc-环境搭建&quot;&gt;环境搭建&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a href=&quot;https://github.com/ixneo/kaoyanshuo&quot;&gt;项目地址&lt;/a&gt;

&lt;a href=&quot;https://github.com/ixNeo/kaoyanshuo/tree/master/doc&quot;&gt;后端详细文档&lt;/a&gt;

&lt;h1 id=&quot;环境搭建&quot;&gt;环境搭建&lt;/h1&gt;
微信小程序开发工具: 只支持windows/macos
本机的win7无法正常显示

</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/04/15/wechat-dev/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/04/15/wechat-dev/</guid>
        
        <category>log</category>
        
        <category>web</category>
        
        
        <category>历劫桥--项目实战</category>
        
      </item>
    
      <item>
        <title>LSTM</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#lstm&quot; id=&quot;markdown-toc-lstm&quot;&gt;LSTM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;lstm&quot;&gt;LSTM&lt;/h1&gt;
长短时记忆网络(long short term memory)，为了解决RNN(循环神经网络)的无法利用长期依赖的问题

LSTM通过三个这样的门结构来实现信息的保护和控制。这三个门分别输入门、遗忘门和输出门

&lt;blockquote&gt;
  门 可以实现选择性地让信息通过，主要是通过一个 sigmoid 的神经层 和一个逐点相乘的操作来实现的。
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 07 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/04/07/lstm/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/04/07/lstm/</guid>
        
        <category>DL</category>
        
        <category>LSTM</category>
        
        
        <category>缘因洞--计算机理论</category>
        
      </item>
    
      <item>
        <title>ROC曲线</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#roc曲线&quot; id=&quot;markdown-toc-roc曲线&quot;&gt;ROC曲线&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;roc曲线&quot;&gt;ROC曲线&lt;/h1&gt;
&lt;a href=&quot;https://blog.csdn.net/u013385925/article/details/80385873&quot;&gt;CSDN&lt;/a&gt;

</description>
        <pubDate>Sun, 07 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2019/04/07/dlstandard/</link>
        <guid isPermaLink="true">http://localhost:4001/2019/04/07/dlstandard/</guid>
        
        <category>DL</category>
        
        
        <category>缘因洞--计算机理论</category>
        
      </item>
    
  </channel>
</rss>
